{
  "hash": "b691c6009f84dbe5a7aed294b08a22bf",
  "result": {
    "markdown": "---\ntitle: \"Instrumental Variables - Assignment 9\"\nauthor: \"Hilal Sankari\"\nformat: \n    html:\n      code-line-numbers: true\n      df-print: paged\n\n---\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-1_8ec6185c60c3933aac0e0cd9b5c0d84f'}\n\n```{.r .cell-code}\n# Load necessary libraries\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.3     ✔ readr     2.1.4\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#> ✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(dagitty)\nlibrary(ggdag)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> \n#> Attaching package: 'ggdag'\n#> \n#> The following object is masked from 'package:stats':\n#> \n#>     filter\n```\n:::\n\n```{.r .cell-code}\nlibrary(estimatr)\nlibrary(AER)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Loading required package: car\n#> Loading required package: carData\n#> \n#> Attaching package: 'car'\n#> \n#> The following object is masked from 'package:dplyr':\n#> \n#>     recode\n#> \n#> The following object is masked from 'package:purrr':\n#> \n#>     some\n#> \n#> Loading required package: lmtest\n#> Loading required package: zoo\n#> \n#> Attaching package: 'zoo'\n#> \n#> The following objects are masked from 'package:base':\n#> \n#>     as.Date, as.Date.numeric\n#> \n#> Loading required package: sandwich\n#> Loading required package: survival\n```\n:::\n:::\n\n# **Part1**\n#### **Define the DAG **\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-2_8227860c2245cbff447fee2bd4ffe15e'}\n\n```{.r .cell-code}\ndag <- dagify(\n  appTime ~ newFeatureUsed,\n  appTime ~ Unobserved,\n  newFeatureUsed ~ Unobserved,\n  newFeatureUsed ~ userEncouragement,\n  exposure = \"newFeatureUsed\",\n  latent = \"Unobserved\",\n  outcome = \"appTime\",\n  coords = list(x = c(Unobserved = 1, newFeatureUsed = 0, appTime = 2, userEncouragement = -1),\n                y = c(Unobserved = 1, newFeatureUsed = 0, appTime = 0, userEncouragement = 0)),\n  labels = c(\n    \"appTime\" = \"Time Spent on the App\",\n    \"newFeatureUsed\" = \"The new feature is used\",\n    \"userEncouragement\" = \"User encouragement to use feature\",\n    \"Unobserved\" = \"Unobserved variables\"\n  )\n)\n```\n:::\n\n#### **Plot DAG **\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-3_ab40676a6bb2c5e61b824788b3f40d29'}\n\n```{.r .cell-code}\nggdag(dag, text = FALSE, use_labels = \"label\")\n```\n\n::: {.cell-output-display}\n![](09_iv_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n# **Part2**\n#### **Load the Data **\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-4_97ae6e914e5d5f2259b447092e0fccec'}\n\n```{.r .cell-code}\nappData <- readRDS(\"C:/Users/user/Documents/TUHH/Causal/Causal_Data_Science_Data/rand_enc.rds\")\n```\n:::\n\n#### **Be familiar with the data **\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-5_12334d41d28ef784a3f700c5e323f2dc'}\n\n```{.r .cell-code}\nhead(appData)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"rand_enc\"],\"name\":[1],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"used_ftr\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"time_spent\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"0\",\"2\":\"1\",\"3\":\"30.51346\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"19.78372\"},{\"1\":\"1\",\"2\":\"1\",\"3\":\"28.59107\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"18.63635\"},{\"1\":\"0\",\"2\":\"0\",\"3\":\"14.55074\"},{\"1\":\"1\",\"2\":\"0\",\"3\":\"12.41954\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n#### **Compute Naive Estimate **\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-6_2a2a24f2c1238c4ea831419d2d5748d3'}\n\n```{.r .cell-code}\nnaiveEstimate <- lm(time_spent ~ used_ftr , data = appData)\nsummary(naiveEstimate)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> lm(formula = time_spent ~ used_ftr, data = appData)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -20.4950  -3.5393   0.0158   3.5961  20.5051 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept) 18.86993    0.06955   271.3   <2e-16 ***\n#> used_ftr    10.82269    0.10888    99.4   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 5.351 on 9998 degrees of freedom\n#> Multiple R-squared:  0.497,\tAdjusted R-squared:  0.497 \n#> F-statistic:  9881 on 1 and 9998 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n# **Part3**\n#### **Check the correlation matrix**\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-7_bfd537fe60512c10a743c9b3365e0900'}\n\n```{.r .cell-code}\ncorrelationMatrix <- cor(appData) %>% round(2)\n```\n:::\n\n::: {.callout-important appearance=\"minimal\"}\nThere is an upward bias in the naive estimate (10.82269) as it surpasses the IV robust estimate (9.738175) when utilizing rand_enc as an instrument. This implies that the effect of used_ftr on time_spent has been overestimated. It is clear that used_ftr and time_spent have a strong correlation. Given that rand_enc shows a weak correlation with time_spent and a higher correlation with treatment (used_ftr), it makes sense to regard it as an instrumental variable. The instrumental variable and outcome have a reasonably low correlation, even though it is not 0 (maybe because of noise).\n:::\n# **Part4**\n#### **Instrumental Variable Estimation using 2SLS with rand_enc and robust standard errors**\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-8_3892c97a182abce35a4b257c45ae0915'}\n\n```{.r .cell-code}\nivModelRobust <- iv_robust(time_spent ~ used_ftr  | rand_enc, data = appData)\nsummary(ivModelRobust)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> \n#> Call:\n#> iv_robust(formula = time_spent ~ used_ftr | rand_enc, data = appData)\n#> \n#> Standard error type:  HC2 \n#> \n#> Coefficients:\n#>             Estimate Std. Error t value  Pr(>|t|) CI Lower CI Upper   DF\n#> (Intercept)   19.312     0.2248   85.89 0.000e+00   18.872    19.75 9998\n#> used_ftr       9.738     0.5353   18.19 8.716e-73    8.689    10.79 9998\n#> \n#> Multiple R-squared:  0.4921 ,\tAdjusted R-squared:  0.492 \n#> F-statistic:   331 on 1 and 9998 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n#### **Hansen J test**\n\n#### **Extract residuals and fitted values from the model**\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-9_c69218de85ed2958784ec2742dc4bf9e'}\n\n```{.r .cell-code}\nresidualsIV <- residuals(ivModelRobust)\nfittedValuesIV <- fitted(ivModelRobust)\n```\n:::\n\n#### **Perform Hansen J test**\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-10_80bdc821fac170cf2c865a70fd602638'}\n\n```{.r .cell-code}\nhansenTestStat <- sum(residualsIV * fittedValuesIV)\npValueHansen <- 1 - pchisq(hansenTestStat, df = 1)\n```\n:::\n\n#### **Display results**\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-11_c9696d522f5577fcb440b33134d0c3ff'}\n\n```{.r .cell-code  code-fold=\"true\"}\ncat(\"Hansen J Test Statistic:\", hansenTestStat, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Hansen J Test Statistic: 0\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ncat(\"P-value:\", pValueHansen, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> P-value: 1\n```\n:::\n:::\n\n::: {.callout-important appearance=\"minimal\"}\nA Hansen J test with a test statistic near 0 and a p-value near 1 suggests that the model's instrument is not violating the over-identifying constraints. In other words, there is no evidence to suggest that the instrument is endogenous or linked with the error term, and the instrument is valid for the model.\n:::\n\n::: {.cell hash='09_iv_cache/html/unnamed-chunk-12_c6cff45e99476c36400bc64090022210'}\n\n```{.r .cell-code  code-fold=\"true\"}\ncat(\"Naive Estimate:\", coef(naiveEstimate)['used_ftr'], \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> Naive Estimate: 10.82269\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\"}\ncat(\"IV Robust Estimate (rand_enc):\", ivModelRobust$coefficients['used_ftr'], \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> IV Robust Estimate (rand_enc): 9.738175\n```\n:::\n:::\n\n::: {.callout-important appearance=\"minimal\"}\nWe would consider the naive estimate to have an upward bias because it is larger than the IV robust estimate using rand_enc as an instrument (9.738175). This suggests that the effect of usedFeature on appTime is overestimated by the naive estimate.\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}